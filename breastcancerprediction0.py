# -*- coding: utf-8 -*-
"""BreastCancerPrediction0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xQV6Zj8dP3782kLB1e5h9eBuZPAzoFpj
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df=pd.read_csv("cancer1.csv")

df.head()

df.tail()

df.shape

df.size

df.count()

df['Class'].value_counts()

benign=df[df['Class']==2]
malignant=df[df['Class']==4]

axes=benign.plot(kind='scatter',x='Clump',y='UnifSize',color='green',label='BENIGN CLASS')
malignant.plot(kind='scatter',x='Clump',y='UnifSize',color='red',label='MALIGNANT CLASS',ax=axes)

df.dtypes

df=df[pd.to_numeric(df['BareNuc'],errors="coerce").notnull()]

df['BareNuc']=df['BareNuc'].astype("int")

df.dtypes

df.columns

feature=df[['Clump', 'UnifSize', 'UnifShape', 'MargAdh', 'SingEpiSize',
       'BareNuc', 'BlandChrom', 'NormNuci', 'Mit']]

x=np.asarray(feature)

y=np.asarray(df['Class'])

x

y

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)

x_train.shape

x_test.shape

y_train.shape

y_test.shape

from sklearn import svm

model=svm.SVC(kernel='linear',gamma='auto',C=0.3)

model.fit(x_train,y_train)

y_predicted=model.predict(x_test)

from sklearn.metrics import classification_report

print(classification_report(y_test,y_predicted))

